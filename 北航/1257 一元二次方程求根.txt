一元二次方程求根
时间限制：1000 ms  |  内存限制：8196 KB 
描述 
根据给定的a, b, c的值求解方程[tex]ax^2+bx+c=0[/tex]

输入 
输入有n+1行：第一行是一个int值，表示测试数据的组数。 下面有n行，每行有三个double值，分别为a，b，c的值，用空格隔开。

输出 
输出有n行，分别对应输入的每组a,b,c的值，输出结果，每一行具体格式为：
a) 如果方程有两个实根，按从小到大的顺序输出这两个实根，精确到小数点后3位。
b) 如果方程有一个实根，输出这一个实根，精确到小数点后3位。
c) 如果方程没有实根，输出"No real."。
d) 如果方程没有根，输出"No answer."。
e) 如果方程有无穷多根，输出"Inf."。

样例输入 
5
1 3 2
1 2 1
1 2 8
0 0 4
0 0 0样例输出 
-2.000 -1.000
-1.000
No real.
No answer.
Inf.

#include<iostream>
#include<string>
#include<algorithm>
#include<iomanip>
#include<cmath>
using namespace std;
double min(double a,double b)
{
	if(a<b) return a;
	return b;
}
double max(double a,double b)
{
	if(a>b) return a;
	return b;
}
int main()
{
	int n;
	cin>>n;
	while(n--)
	{
		double a,b,c;
			cin>>a>>b>>c;
			if(a==0 && b==0 && c==0) cout<<"Inf."<<endl;
			else if(a==0 && b==0) cout<<"No answer."<<endl;
			else if(b*b-4*a*c<0) cout<<"No real."<<endl;
			else if(a==0) cout<<fixed<<setprecision(3)<<-1*c/b<<endl;
			else if(b*b-4*a*c==0) cout<<fixed<<setprecision(3)<<(-b)/(2*a)<<endl;
			else cout<<fixed<<setprecision(3)<<min((-b-sqrt(b*b-4*a*c))/(2*a),(-b+sqrt(b*b-4*a*c))/(2*a))<<" "<<max((-b-sqrt(b*b-4*a*c))/(2*a),(-b+sqrt(b*b-4*a*c))/(2*a))<<endl;
	}
	return 0;
}
