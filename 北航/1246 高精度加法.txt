高精度加法
时间限制：1000 ms  |  内存限制：8192 KB 
描述 
高精度加法:
【就是2个很大的数字，位数很多的数字相加】
【提示：想想小学的时候如何计算加法的，过程，竖式】

输入 
第一行又个整数T，表示有T组数据。
对于每组输入：两行，每行表示一个非负整数（不超过200位）。

输出 
T行数，每行一个数，是相应输入组的两数之和。

样例输入 
1
99
101
样例输出 
200


#include<iostream>
#include<string>
#include<algorithm>
using namespace std;
int max(int a,int b)
{
	if(a>b) return a;
	return b;
}
string add(string a,string b)
{
	reverse(a.begin(),a.end());
	reverse(b.begin(),b.end());
	string s;
	int jinwei=0,i,j;
	for(i=a.length();i<max(a.length(),b.length());i++)
		a+='0';
	for(i=b.length();i<max(a.length(),b.length());i++)
		b+='0';
	for(i=0;i<a.length();i++)
	{
		int temp=(a[i]-'0')+(b[i]-'0')+jinwei;
		if(temp>=10) {jinwei=1;temp%=10;}
		else jinwei=0;
		s+=char(temp+'0');
	}
	if(jinwei==1) s+='1';
	reverse(s.begin(),s.end());
	return s;
}

int main()
{
	int n;
	cin>>n;
	while(n--)
	{
		string a,b;
		cin>>a>>b;
		cout<<add(a,b)<<endl;
	}
	return 0;
}
